#!/usr/bin/env node

/**
 * Core dependencies.
 */

var fs = require('fs');
var resolve = require('path').resolve;

/**
 * External dependencies.
 */

var optimist = require('optimist');
var glob = require('glob');

/**
 * Internal dependencies.
 */

var hydro = require('..')();

/**
 * Options.
 */

var options = (function(argv) {
  argv.tests = [];
  argv.formatter = argv.formatter || 'hydro-simple';
  if (argv._.length === 0) argv._.push('test/*.js');
  return argv;
})(optimist.argv);

/**
 * Conf file.
 */

var conf = resolve(options.setup || 'hydro.conf.js');

// --help

if (options.help) {
  console.log();
  console.log('    Usage: hydro [debug] [files]');
  console.log();
  process.exit(0);
}

// -version

if (options.version) {
  console.log(require('../package.json').version);
  process.exit(0);
}

/**
 * Set `NODE_ENV` to test if none
 */

process.NODE_ENV = process.NODE_ENV || 'test';

/**
 * Try to load the bootstrap file.
 */

if (fs.existsSync(conf)) {
  var setup = require(conf);
  if ('function' === typeof setup) setup(hydro);
}

/**
 * Load all tests.
 */

options._.forEach(function(pattern) {
  glob(pattern, { sync: true }).forEach(function(file) {
    if (fs.statSync(file).isDirectory()) return;
    options.tests.push(resolve(file));
  });
});

/**
 * Failed tests counter.
 */

var failures = 0;

hydro.on('post:test', function(test) {
  failures += test.failed ? 1 : 0;
});

/**
 * Seek and destroy.
 */

hydro.run(options, function() {
  process.exit(failures);
});
